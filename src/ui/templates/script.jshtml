{{define "script-js"}}

document.addEventListener("DOMContentLoaded", () => {
  initHighlightJS();
  initMermaid();
  formatMermaidBlocks();
  enhanceCodeBlocks();
  wrapTablesInScroll();
  setupMenuDrawer();
  resolveInitialSection();
  setupPopstateListener();
});

// === Constants ===
const SECTION_SELECTOR = '.content-section';
const ACTIVE_CLASS = 'active';
const MERMAID_CLASS = 'mermaid';
const MERMAID_INITIALIZED_CLASS = 'mermaid-initialized';

// === Setup Functions ===

function initHighlightJS() {
  hljs.highlightAll();
}

function initMermaid() {
  mermaid.initialize({
    startOnLoad: false,
    flowchart: {
      htmlLabels: true,
      useMaxWidth: true
    }
  });
}

function formatMermaidBlocks() {
  document.querySelectorAll('pre > code.language-mermaid').forEach((codeEl) => {
    const preEl = codeEl.parentElement;
    const mermaidDiv = document.createElement('div');
    mermaidDiv.className = MERMAID_CLASS;
    mermaidDiv.textContent = codeEl.textContent;
    preEl.replaceWith(mermaidDiv);
  });
}

function enhanceCodeBlocks() {
  document.querySelectorAll("pre > code").forEach((codeEl) => {
    const preEl = codeEl.parentElement;
    preEl.style.position = "relative";

    const btn = document.createElement("button");
    btn.innerHTML = '<i class="ri-file-copy-fill"></i>';
    Object.assign(btn.style, {
      position: "absolute",
      top: "0.5em",
      right: "0.5em",
      background: "transparent",
      border: "none",
      cursor: "pointer",
      fontSize: "1.45em",
      color: "#888",
      padding: "0",
      margin: "0"
    });

    btn.onclick = () => {
      navigator.clipboard.writeText(codeEl.textContent.trim());
      const floatIcon = document.createElement("i");
      floatIcon.className = "ri-clipboard-fill copy-float";
      preEl.appendChild(floatIcon);
      setTimeout(() => floatIcon.remove(), 600);
    };

    preEl.appendChild(btn);
  });
}

function wrapTablesInScroll() {
  document.querySelectorAll(`${SECTION_SELECTOR} table`).forEach((table) => {
    const wrapper = document.createElement("div");
    wrapper.classList.add("table-scroll");
    table.parentNode.insertBefore(wrapper, table);
    wrapper.appendChild(table);
  });
}

function setupMenuDrawer() {
  const toggleBtn = document.querySelector(".menu-toggle-button");
  const drawerMenu = document.querySelector(".drawer-menu");

  toggleBtn?.addEventListener("click", () => {
    drawerMenu?.classList.toggle("show");
  });

  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape") {
      drawerMenu?.classList.remove("show");
    }
  });
}

// === Section Handling ===

function initVisibleMermaid() {
  document.querySelectorAll(`${SECTION_SELECTOR}.${ACTIVE_CLASS} .${MERMAID_CLASS}`).forEach((el) => {
    if (!el.classList.contains(MERMAID_INITIALIZED_CLASS)) {
      el.classList.add(MERMAID_INITIALIZED_CLASS);
      mermaid.init(undefined, el);
    }
  });
}

function showSection(id) {
  const encodedId = encodeURIComponent(id);
  if (window.location.hash !== `#${encodedId}`) {
    window.location.hash = encodedId;
  }

  // Hide all sections
  document.querySelectorAll(SECTION_SELECTOR).forEach((el) => {
    el.classList.remove(ACTIVE_CLASS);
    Object.assign(el.style, {
      opacity: 0,
      transform: 'translateY(-10px)',
      position: '',
      willChange: ''
    });
  });

  // Show target section
  const target = document.getElementById(id);
  if (target) {
    target.classList.add(ACTIVE_CLASS);
    Object.assign(target.style, {
      position: 'relative',
      willChange: 'transform, opacity'
    });

    void target.offsetWidth; // force reflow

    Object.assign(target.style, {
      transition: 'opacity 0.3s ease, transform 0.3s ease',
      opacity: 1,
      transform: 'translateY(0)'
    });

    initVisibleMermaid();
  }

  requestAnimationFrame(() => {
    window.scrollTo({ top: 0 });
  });
}

function resolveInitialSection() {
  const fragment = decodeURIComponent(window.location.hash);
  if (fragment.startsWith("#section-")) {
    const sectionId = fragment.slice(1);
    requestAnimationFrame(() => {
      showSection(sectionId);
      window.scrollTo({ top: 0 });
    });
  }
}

function setupPopstateListener() {
  window.addEventListener("popstate", () => {
    const newFragment = decodeURIComponent(window.location.hash);
    if (newFragment.startsWith("#section-")) {
      const sectionId = newFragment.slice(1);
      showSection(sectionId);
      window.scrollTo({ top: 0 });
    }
  });
}

{{end}}
